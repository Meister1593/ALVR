diff --git a/libavcodec/vaapi_encode_h265.c b/libavcodec/vaapi_encode_h265.c
index 2283bcc0b4..2a7e374ea4 100644
--- a/libavcodec/vaapi_encode_h265.c
+++ b/libavcodec/vaapi_encode_h265.c
@@ -950,9 +950,13 @@ static av_cold int vaapi_encode_h265_get_encoder_caps(AVCodecContext *avctx)
     av_log(avctx, AV_LOG_VERBOSE, "Using CTU size %dx%d, "
            "min CB size %dx%d.\n", priv->ctu_size, priv->ctu_size,
            priv->min_cb_size, priv->min_cb_size);
-
-    base_ctx->surface_width  = FFALIGN(avctx->width,  priv->min_cb_size);
-    base_ctx->surface_height = FFALIGN(avctx->height, priv->min_cb_size);
+    if (priv->common.hwctx->driver_quicks & AV_VAAPI_DRIVER_QUIRK_HEVC_ENCODER_ALIGN_64_16) {
+        base_ctx->surface_width  = FFALIGN(avctx->width,  64);
+        base_ctx->surface_height = FFALIGN(avctx->height, 16);
+    } else {
+        base_ctx->surface_width  = FFALIGN(avctx->width,  priv->min_cb_size);
+        base_ctx->surface_height = FFALIGN(avctx->height, priv->min_cb_size);
+    }
 
     base_ctx->slice_block_width = base_ctx->slice_block_height = priv->ctu_size;
 
diff --git a/libavutil/hwcontext_vaapi.c b/libavutil/hwcontext_vaapi.c
index 95aa38d9d2..80321909a6 100644
--- a/libavutil/hwcontext_vaapi.c
+++ b/libavutil/hwcontext_vaapi.c
@@ -390,6 +390,11 @@ static const struct {
         "Splitted-Desktop Systems VDPAU backend for VA-API",
         AV_VAAPI_DRIVER_QUIRK_SURFACE_ATTRIBUTES,
     },
+    {
+        "AMD Radeon",
+        "AMD Radeon",
+        AV_VAAPI_DRIVER_QUIRK_HEVC_ENCODER_ALIGN_64_16,
+    }
 };
 
 static int vaapi_device_init(AVHWDeviceContext *hwdev)
diff --git a/libavutil/hwcontext_vaapi.h b/libavutil/hwcontext_vaapi.h
index 0b2e071cb3..a60541d052 100644
--- a/libavutil/hwcontext_vaapi.h
+++ b/libavutil/hwcontext_vaapi.h
@@ -58,6 +58,12 @@ enum {
      * and the results of the vaQuerySurfaceAttributes() call will be faked.
      */
     AV_VAAPI_DRIVER_QUIRK_SURFACE_ATTRIBUTES = (1 << 3),
+
+    /**
+    * The driver requires to align the surface with 64x16 for the HEVC encoder,
+    * and it does not use the min_cb_size like other hardware implementations.
+    */
+    AV_VAAPI_DRIVER_QUIRK_HEVC_ENCODER_ALIGN_64_16 = (1 << 4),
 };
 
 /**
